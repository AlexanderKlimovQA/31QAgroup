--Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.

SELECT author,
  title,
  price
FROM book
WHERE price <= (
    SELECT AVG(price)
    FROM book
  )
ORDER BY price DESC;


-- Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.

SELECT author,
title,
price
FROM book
WHERE (price - (SELECT MIN(price) FROM book)) <= 150
ORDER BY price


-- Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.


SELECT author,              -- Оператор IN определяет, совпадает ли значение столбца с одним из значений, содержащихся во вложенном запросе. 
title,                      -- При этом логическое выражение после WHERE получает значение истина. Оператор NOT IN выполняет обратное действие – 
amount                      -- выражение истинно, если значение столбца не содержится во вложенном запросе.
FROM book
WHERE amount IN (                 -- Сперва во вложенном запросе производим группировку по количеству (amount).
    SELECT amount                 -- В эти группы будут входить уникальные значения, то есть все дубли будут объединены
    FROM book                     -- в одну группу. Далее с помощью COUNT(), которое считает кол-во записей в группе
    GROUP BY amount               -- мы считаем кол-во записей в каждой группе и если оно больше одного,
    HAVING COUNT(amount) = 1      -- то в этой группе несколько одинаковых значений (дубликатов).
    );                            -- Далее IN проверяет, совпадает ли значение столбца со значением, содержащимся во вложенном запросе.
                                  -- Те строчки, в которых значение совпадает, проходят запрос.


-- Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора.

SELECT author,                            -- С помощью группировки по автору находим у каждого автора книги с их минимальной ценой.
title,                                    -- Получаем: 650.00 , 460.00, 540.50. Т.к. ANY достаточно, чтобы вернуть true, совпадение хотя бы
price                                     -- с одним элементом из группы, то мы находим все книги, цены которых меньше 650.00 рублей. Если бы
FROM book                                 -- использовалась команда ALL, то мы нашли бы только те книги, цена которых меньше 460.00 рублей
WHERE price < ANY (                       -- т.к. результат должен бы был быть меньше всех трех цен: 650.00 , 460.00, 540.50,
  SELECT MIN(price)                       -- т.е true вернулось бы, только если бы искомое число было истиной для всех значений.
  FROM book
  GROUP BY author
);


-- Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. Последнему столбцу присвоить имя Заказ. В результат не включать книги, которые заказывать не нужно.

SELECT title,
author,
amount
(
    SELECT MAX(amount)
    FROM book
    ) - amount AS Заказ      -- Вычитание из подзапроса должно идти после самого подзапроса
FROM book
WHERE amount <> (
    SELECT MAX(amount)
    FROM book
    );