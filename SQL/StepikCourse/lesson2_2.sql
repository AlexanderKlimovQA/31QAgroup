-- Вывести название, жанр и цену тех книг, количество которых больше 8, в отсортированном по убыванию цены виде.

SELECT title, name_genre, price
FROM  book b JOIN
    genre g ON g.genre_id = b.genre_id
WHERE amount > 8
ORDER BY price DESC


-- Вывести все жанры, которые не представлены в книгах на складе.

SELECT name_genre 
FROM genre g LEFT JOIN
     book b ON g.genre_id = b.genre_id
WHERE b.genre_id IS NULL                   -- Если хотим найти строки, где значение NULL, надо писать IS NULL, = NULL не подходит.


-- Есть список городов, хранящийся в таблице city:

-- city_id 	        name_city
--    1 	          Москва
--    2 	      Санкт-Петербург
--    3 	        Владивосток

-- Необходимо в каждом городе провести выставку книг каждого автора в течение 2020 года. Дату проведения выставки выбрать случайным образом. Создать запрос, который выведет город, автора и дату проведения выставки. Последний столбец назвать Дата. Информацию вывести, отсортировав сначала в алфавитном порядке по названиям городов, а потом по убыванию дат проведения выставок.

SELECT name_city, name_author, DATE_ADD('2020-01-01', INTERVAL FLOOR(RAND() * 365) DAY) Дата   -- DATE_ADD - служит для сложения даты с числом. 
FROM city, author                                                                              -- Синтаксис: DATE_ADD(Дата, INTERVAL число_которое_прибавляем единица_измерения).
ORDER BY name_city, Дата DESC;                                                                     -- RAND() - генерирует случайное число в диапазоне 0 - 1 не включительно.
                                                                                                   -- Если умножить функцию на 365, она будет генерить вещественный числа в диапазоне 365 (не включительно).
                                                                                                   -- FLOOR() - возвращает наибольшее целое число, меньшее или равное указанному числовому значению.


-- Next